{"version":3,"file":"shelf-pack.umd.js","sources":["../node_modules/tslib/tslib.es6.js","../../src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","/**\n * @fileoverview\n *\n * ShelfPack is a JavaScript library for efficiently packing rectangular items\n * (bins) into a larger container (sprite) using a bin packing algorithm. It\n * employs the Shelf Best Height Fit strategy to minimize wasted space.\n *\n * An Analogy: The Bookshelf\n *\n * Imagine a ShelfPack instance as managing a physical bookshelf:\n *\n *     - `ShelfPack` instance: entire bookshelf.\n *     - `this.shelves`: The horizontal shelves on the bookshelf.\n *     - `Bin` objects: The rectangular items (e.g., books) being placed on the\n *        shelves.\n *     - `this.freebins`: A box of \"available\" books that have been removed\n *        from the shelf and can be reused.\n *     - `this.bins`: A record of all the books currently placed on the\n *        bookshelf, and how many times each has been requested.\n *\n * # Core Concepts:\n *\n * ## Bins\n *  Bins (e.g. 'items', 'elements', 'books') represent an occupied space of a\n * certain size. Each bin has a width (`w`), height (`h`), and a unique\n * identifier (`id`). Think of `this.bins` as a bookshelf with books on it.\n *\n * ## Shelves\n * Shelves are _Horizontal Rows_ within the container where bins are placed.\n * New shelves are created as needed to accommodate bins that don't fit on\n * existing shelves. Think of `this.shelves` as, er, the 'shelves' on a\n * bookshelf.\n *\n * ## Freebins\n * Freebins are a list of previously allocated bins that have been released\n * (i.e. have `refcount === 0`) and are available for reuse. Think of `freebins`\n *  as books that were taken off the shelf and put into a special\n * \"available books\" box (`this.freebins`). The space these books recently\n * occupied can be checked for fit when another book is being placed on a shelf.\n * If it fits, the book can be placed there.\n *\n * ## Shelf Best Height Fit\n * The algorithm prioritizes:\n *      1. Reusing existing `freebins` if they are an exact match or have\n *         minimal wasted space.\n *      2. Placing bins on shelves with the closest matching height to minimize\n *         wasted vertical space.\n *      3. Creating new shelves as needed.\n *\n * ## Auto Resize\n * If enabled (`{autoResize: true}`), the container will automatically grow to\n * accommodate bins that don't fit within the current dimensions.\n *\n * ## Refcounting\n * Reference counting Bins keeps track of how many a bin has been allocated.\n * Use `.ref()` to increment and `.unref()` to decrement the count. When the\n * count reaches 0, the bin is freed.\n *\n * # Usage\n *\n * 1. Create a ShelfPack instance\n *    `const packer = new ShelfPack(width, height, options);`\n * 2. Pack bins\n *    `packer.pack(bins, options);` or `packer.packOne(w, h, id);`\n * 3. Retrieve a bin\n *    `packer.getBin(id);`\n * 4. Manage bin references\n *    `packer.ref(bin);` and `packer.unref(bin);`\n * 5. Resize the container\n *    `packer.resize(width, height);`\n * 6. Clear the container\n *    `packer.clear();`\n */\n\n/**\n * Options for configuring the ShelfPack instance.\n */\ninterface ShelfPackOptions {\n  /**\n   * If true, the packer will automatically grow its dimensions to accommodate\n   * bins that don't fit.\n   */\n  autoResize?: boolean;\n}\n\ninterface BinInput {\n  w?: number;\n  h?: number;\n  width?: number;\n  height?: number;\n  id?: string | number;\n}\n\ntype InputBin<T extends {inPlace?: boolean}> = T['inPlace'] extends true\n  ? Bin // If inPlace is true, require Bin type\n  : BinInput; // Otherwise, allow BinInput type\n\n/**\n * Represents a rectangular area within the packer.\n */\nclass Bin {\n  id: string | number;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  maxw: number;\n  maxh: number;\n  refcount: number;\n  /**\n   * Creates a new Bin instance.\n   * @param id Unique identifier for the bin.\n   * @param x Left coordinate of the bin.\n   * @param y Top coordinate of the bin.\n   * @param w Width of the bin.\n   * @param h Height of the bin.\n   * @param maxw Maximum width the bin can occupy.\n   * @param maxh Maximum height the bin can occupy.\n   * @param refcount The number of references to this bin.\n   */\n  constructor(\n    id: string | number,\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    maxw: number = w,\n    maxh: number = h,\n    refcount: number = 0,\n  ) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.maxw = maxw;\n    this.maxh = maxh;\n    this.refcount = refcount;\n  }\n}\n\n/**\n * Represents a horizontal row within the packer where bins can be placed.\n */\nclass Shelf {\n  y: number;\n  w: number;\n  h: number;\n  x: number;\n  free: number;\n  /**\n   * Creates a new Shelf instance.\n   * @param y Top coordinate of the shelf.\n   * @param width Width of the shelf.\n   * @param height Height of the shelf.\n   * @param x The initial X position on the shelf\n   */\n  constructor(y: number, width: number, height: number, x: number = 0) {\n    this.y = y;\n    this.w = width;\n    this.h = height;\n    this.x = x;\n    this.free = width;\n  }\n\n  /**\n   * Attempts to allocate a bin on this shelf.\n   * @param w Width of the bin to allocate.\n   * @param h Height of the bin to allocate.\n   * @param id Unique identifier for the bin.\n   * @returns The allocated Bin, or null if allocation failed.\n   */\n  alloc(w: number, h: number, id: string | number): Bin | null {\n    if (w > this.free || h > this.h) {\n      return null;\n    }\n    const x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h, w, this.h);\n  }\n\n  /**\n   * Resizes the shelf to a new width.\n   * @param w The new width of the shelf.\n   */\n  resize(w: number): void {\n    this.free += w - this.w;\n    this.w = w;\n  }\n}\n\n/**\n * A bin packing algorithm that uses the Shelf Best Height Fit strategy.\n */\nclass ShelfPack {\n  /**\n   * If true, the packer will automatically grow its dimensions to accommodate\n   * bins that don't fit.\n   */\n  public autoResize: boolean;\n  /**\n   * The list of shelves in the packer.\n   */\n  public shelves: Shelf[];\n  /**\n   * The list of free bins available for reuse.\n   */\n  public freebins: Bin[];\n  /**\n   * Statistics about the packed bins.\n   */\n  public stats: Record<number, number>;\n  /**\n   * A map of packed bins, indexed by their unique identifiers.\n   */\n  public bins: Record<string | number, Bin>;\n  /**\n   * The maximum ID used for a bin.\n   */\n  public maxId: number;\n  /**\n   * The current width of the packer\n   */\n  public w: number;\n  /**\n   * The current height of the packer\n   */\n  public h: number;\n  /**\n   * Creates a new ShelfPack instance.\n   * @param width Initial width of the packer.\n   * @param height Initial height of the packer.\n   * @param options Optional configuration options.\n   */\n  constructor(\n    width: number = 64,\n    height: number = 64,\n    options?: ShelfPackOptions,\n  ) {\n    const opts = options ?? {};\n    this.autoResize = !!opts.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n    this.w = width;\n    this.h = height;\n  }\n\n  /**\n   * Packs multiple bins into the packer.\n   * @param bins An array of bins to pack. Each bin should have `w` (or `width`) and `h` (or `height`) properties.\n   * @param options Optional parameters.\n   * @param options.inPlace If true, modifies the input `bins` array in-place, adding `x`, `y`, and `id` properties to each bin.\n   * @returns An array of packed Bins.\n   */\n  pack<T extends {inPlace?: boolean}>(\n    bins: InputBin<T>[],\n    options: T = {} as T,\n  ): Bin[] {\n    const binsCopy = [...bins] as InputBin<T>[];\n\n    const results: Bin[] = [];\n\n    for (let i = 0; i < binsCopy.length; i++) {\n      const w = binsCopy[i].w || binsCopy[i].w;\n      const h = binsCopy[i].h || binsCopy[i].h;\n      const id = binsCopy[i].id;\n\n      if (typeof w === 'number' && typeof h === 'number') {\n        const allocation = this.packOne(w, h, id);\n        if (!allocation) {\n          continue;\n        }\n        if (options.inPlace) {\n          if ('x' in binsCopy[i] && 'y' in binsCopy[i]) {\n            const bin = bins[i] as Bin;\n            bin.x = allocation.x;\n            bin.y = allocation.y;\n            bin.id = allocation.id;\n          }\n          results.push(allocation);\n        }\n      }\n    }\n\n    this.shrink();\n\n    return results;\n  }\n\n  /**\n   * Packs a single bin into the packer.\n   * @param w Width of the bin to pack.\n   * @param h Height of the bin to pack.\n   * @param id Optional unique identifier for the bin. If not provided, a new ID will be generated.\n   * @returns The packed Bin, or null if the bin could not be packed.\n   */\n  packOne(w: number, h: number, id?: string | number): Bin | null {\n    const best: {freebin: number; shelf: number; waste: number} = {\n      freebin: -1,\n      shelf: -1,\n      waste: Infinity,\n    };\n    let y = 0;\n    let bin: Bin | undefined;\n    let shelf: Shelf | undefined;\n    let waste: number;\n    let i: number;\n    let finalId: string | number;\n\n    // If id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n      bin = this.getBin(id);\n      if (bin) {\n        // We packed this bin already.\n        this.ref(bin);\n        return bin;\n      }\n      finalId = id;\n    } else {\n      finalId = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n      bin = this.freebins[i];\n\n      // Exactly the right height and width, use it..\n      if (h === bin.maxh && w === bin.maxw) {\n        return this.allocFreebin(i, w, h, finalId);\n      }\n      // Not enough height or width, skip it..\n      if (h > bin.maxh || w > bin.maxw) {\n        continue;\n      }\n      // Extra height or width, minimize wasted area..\n      if (h <= bin.maxh && w <= bin.maxw) {\n        waste = bin.maxw * bin.maxh - w * h;\n        if (waste < best.waste) {\n          best.waste = waste;\n          best.freebin = i;\n        }\n      }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n      shelf = this.shelves[i];\n      y += shelf.h;\n\n      // Not enough width on this shelf, skip it..\n      if (w > shelf.free) {\n        continue;\n      }\n      // Exactly the right height, pack it..\n      if (h === shelf.h) {\n        return this.allocShelf(i, w, h, finalId);\n      }\n      // Not enough height, skip it..\n      if (h > shelf.h) {\n        continue;\n      }\n      // Extra height, minimize wasted area..\n      if (h < shelf.h) {\n        waste = (shelf.h - h) * w;\n        if (waste < best.waste) {\n          best.freebin = -1;\n          best.waste = waste;\n          best.shelf = i;\n        }\n      }\n    }\n\n    if (best.freebin !== -1) {\n      return this.allocFreebin(best.freebin, w, h, finalId);\n    }\n\n    if (best.shelf !== -1) {\n      return this.allocShelf(best.shelf, w, h, finalId);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= this.h - y && w <= this.w) {\n      shelf = new Shelf(y, this.w, h);\n      return this.allocShelf(this.shelves.push(shelf) - 1, w, h, finalId);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accommodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n      let h1: number, h2: number, w1: number, w2: number;\n\n      h1 = h2 = this.h;\n      w1 = w2 = this.w;\n\n      if (w1 <= h1 || w > w1) {\n        // Grow width..\n        w2 = Math.max(w, w1) * 2;\n      }\n      if (h1 < w1 || h > h1) {\n        // Grow height..\n        h2 = Math.max(h, h1) * 2;\n      }\n\n      this.resize(w2, h2);\n      return this.packOne(w, h, finalId); // Retry.\n    }\n\n    return null;\n  }\n\n  /**\n   * Allocates a bin by reusing an existing free bin.\n   * @param index The index of the free bin in the `freebins` array.\n   * @param w The width of the bin to allocate.\n   * @param h The height of the bin to allocate.\n   * @param id The unique identifier for the bin.\n   * @returns The allocated Bin.\n   */\n  private allocFreebin(\n    index: number,\n    w: number,\n    h: number,\n    id: string | number,\n  ): Bin {\n    const bin = this.freebins.splice(index, 1)[0];\n    const newBin = new Bin(id, bin.x, bin.y, w, h, bin.maxw, bin.maxh, 0);\n    this.bins[id] = newBin;\n    this.ref(newBin);\n    return newBin;\n  }\n\n  /**\n   * Allocates a bin on an existing shelf.\n   * @param index The index of the shelf in the `shelves` array.\n   * @param w The width of the bin to allocate.\n   * @param h The height of the bin to allocate.\n   * @param id The unique identifier for the bin.\n   * @returns The allocated Bin.\n   */\n  private allocShelf(\n    index: number,\n    w: number,\n    h: number,\n    id: string | number,\n  ): Bin {\n    const shelf = this.shelves[index];\n    const bin = shelf.alloc(w, h, id);\n    if (bin === null) {\n      throw new Error('Failed to allocate bin on shelf.');\n    }\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n  }\n\n  /**\n   * Shrinks the width/height of the sprite to the bare minimum.\n   * Since shelf-pack doubles first width, then height when running out of shelf space\n   * this can result in fairly large unused space both in width and height if that happens\n   * towards the end of bin packing.\n   */\n  shrink(): void {\n    if (this.shelves.length > 0) {\n      let w2 = 0;\n      let h2 = 0;\n\n      for (let j = 0; j < this.shelves.length; j++) {\n        const shelf = this.shelves[j];\n        h2 += shelf.h;\n        w2 = Math.max(shelf.w - shelf.free, w2);\n      }\n\n      this.resize(w2, h2);\n    }\n  }\n\n  /**\n   * Retrieves a packed bin by its ID.\n   * @param id The unique identifier of the bin.\n   * @returns The Bin, or undefined if no bin with the given ID is found.\n   */\n  getBin(id: string | number): Bin | undefined {\n    return this.bins[id];\n  }\n\n  /**\n   * Increments the reference count of a bin.\n   * @param bin The bin to increment the reference count of.\n   * @returns The new reference count of the bin.\n   */\n  ref(bin: Bin): number {\n    if (++bin.refcount === 1) {\n      // A new Bin.. record height in stats histogram..\n      this.stats[bin.h] = (this.stats[bin.h] | 0) + 1;\n    }\n\n    return bin.refcount;\n  }\n\n  /**\n   * Decrements the reference count of a bin.\n   * If the reference count reaches 0, the bin is added to the `freebins` list\n   * and removed from `bins`.\n   * @param bin The bin to decrement the reference count of.\n   * @returns The new reference count of the bin.\n   */\n  unref(bin: Bin): number {\n    if (bin.refcount === 0) {\n      return 0;\n    }\n\n    if (--bin.refcount === 0) {\n      this.stats[bin.h]--;\n      delete this.bins[bin.id];\n      this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n  }\n\n  /**\n   * Clears the packer, removing all bins and shelves.\n   */\n  clear(): void {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n  }\n\n  /**\n   * Resizes the packer to the given dimensions.\n   * @param w The new width of the packer.\n   * @param h The new height of the packer.\n   * @returns True if the resize was successful, false otherwise.\n   */\n  resize(w: number, h: number): boolean {\n    this.w = w;\n    this.h = h;\n    for (let i = 0; i < this.shelves.length; i++) {\n      this.shelves[i].resize(w);\n    }\n    return true;\n  }\n}\n\nexport default ShelfPack;\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}